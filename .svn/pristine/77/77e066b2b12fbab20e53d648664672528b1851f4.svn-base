import { fetchMerchant, saveOrUpdateMerchant, isFrozenMerchant, getMerchInfo, fetchMerchantDetail } from '@/services/merchant';
import { notification } from 'antd';

export default {
  namespace: 'merchant',

  state: {
    list: {
      total: 0
    },
    loading: false,
    profitList: {
      data: {
        total: 0,
        data: [],
        totalPage: 5
      }
    },
    profitQueryList: {
      data: {
        total: 0,
        data: [],
        totalPage: 5
      }
    },
    currentMerchant:{},
    chsChannel:[]
  },

  effects: {
    *fetch({ payload }, { call, put }, ) {
      yield put({
        type: 'loading',
      });
      const response = yield call(fetchMerchant, payload);
      yield put({
        type: 'save',
        payload: response.data
      });
    },
    *fetchDetail({ payload }, { call, put }, ) {
      const response = yield call(fetchMerchantDetail, payload);
      yield put({
        type: 'saveDetail',
        payload: response.data
      });
      // 编辑时通道列表回显
      yield put({
        type: 'saveChannel',
        payload: response.data.merchChannelList
      });
    },
    // general页面查询商户基本信息
    *fetchMerchInfo(_, { call, put }, ) {
      const response = yield call(getMerchInfo);
      yield put({
        type: 'saveMerchInfo',
        payload: response.data
      });
    },
    *levelA({ payload }, { call, put }, ) {
      const response = yield call(fetchMerchant, payload);
      yield put({
        type: 'levelAgent',
        payload: response
      });
    },
    *add({ payload }, { call, put }) {
      const response = yield call(saveOrUpdateMerchant, payload);
      if (response.code === 'SUCCESS') {
        const newFetch = yield call(fetchMerchant, {
          pageNo: 1,
          pageSize: 10
        });
        yield put({
          type: 'save',
          payload: newFetch.data,
        });
        notification.success({
          message: response.code,
          description: response.msg,
        });
      } else {
        notification.error({
          message: response.code,
          description: response.msg,
        });
      }
      return response;
    },
    *update({ payload }, { call, put }) {
      const response = yield call(saveOrUpdateMerchant, payload);
      if (response.code === 'SUCCESS') {
        const newFetch = yield call(fetchMerchant, {
          pageNo: 1,
          pageSize: 10
        });
        yield put({
          type: 'save',
          payload: newFetch.data,
        });
        notification.success({
          message: response.code,
          description: response.msg,
        });
      } else {
        notification.error({
          message: response.code,
          description: response.msg,
        });
      }
    },

    *statusAgent({ payload }, { call, put }) {
      const response = yield call(isFrozenMerchant, payload);
      if (response.code === 'SUCCESS') {
        const newFetch = yield call(fetchMerchant, {
          pageNo: 1,
          pageSize: 10
        });
        yield put({
          type: 'save',
          payload: newFetch.data,
        });
      } else {
        notification.error({
          message: response.code,
          description: response.msg,
        });
      }
    },

    // 以下四个个方法保存商户资质相关图片，以供编辑时调用 
    *idCardPhoto({ payload, callback }, { put }) {
      yield put({
        type: 'saveIdCardPhoto',
        payload,
      });
      if (callback) callback();
    },
    *idCardBackPhoto({ payload, callback }, { put }) {
      yield put({
        type: 'saveIdCardBackPhoto',
        payload,
      });
      if (callback) callback();
    },
    *busLicense({ payload, callback }, { put }) {
      yield put({
        type: 'saveBusLicense',
        payload,
      });
      if (callback) callback();
    },
    *bankOpenPermit({ payload, callback }, { put }) {
      yield put({
        type: 'saveBankOpenPermit',
        payload,
      });
      if (callback) callback();
    },
    // 保存当前通道配置
    *setChannel({ payload, callback }, { put }) {
      yield put({
        type: 'saveChannel',
        payload,
      });
      if (callback) callback();
    },

  },

  reducers: {
    loading(state) {
      return {
        ...state,
        loading: true
      };
    },

    save(state, action) {
      return {
        ...state,
        list: action.payload,
        loading: false
      };
    },
    saveDetail(state, action) {
      return {
        ...state,
        currentMerchant: action.payload,
      };
    },
    profitSave(state, action) {
      return {
        ...state,
        profitList: action.payload,
        loading: false
      };
    },
    profitDetailsSave(state, action) {
      return {
        ...state,
        profitQueryList: action.payload,
        loading: false
      };
    },
    levelAgent(state, action) {
      return {
        ...state,
        levelList: action.payload,
        loading: false
      };
    },
    saveMerchInfo(state, action) {
      return {
        ...state,
        generalMerchInfo: action.payload,
      };
    },
    saveIdCardPhoto(state, action) {
      return {
        ...state,
        idCardPhoto: action.payload,
      };
    },
    saveIdCardBackPhoto(state, action) {
      return {
        ...state,
        idCardBackPhoto: action.payload,
      };
    },
    saveBusLicense(state, action) {
      return {
        ...state,
        busLicense: action.payload,
      };
    },
    saveBankOpenPermit(state, action) {
      return {
        ...state,
        bankOpenPermit: action.payload,
      };
    },
    saveChannel(state, action) {
      return {
        ...state,
        chsChannel: action.payload,
      };
    },
  }
};
