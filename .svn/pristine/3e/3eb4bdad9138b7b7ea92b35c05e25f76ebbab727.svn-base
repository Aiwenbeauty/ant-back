import {querySalesman,saveOrUpdateSalesman,prohibitSalesmanById,startUpSalesmanById} from '@/services/salesmanList';
import { notification } from 'antd'
export default {
  namespace: 'agentSalesman',

  state: {
    list: [],
    loading:false
  },

  effects: {
    *fetch({ payload }, { call, put } ,) {
      yield put({
        type: 'loading',
      });
      const response =  yield call(querySalesman,payload);
      yield put({
        type: 'save',
        payload:response
      });
    },
    *add({ payload }, { call, put }) {
      const response = yield call(saveOrUpdateSalesman, payload);
      if (response.code === 'SUCCESS') {
        const newFetch = yield call(querySalesman, {
          pageNo: 1,
          pageSize: 10
        });
        yield put({
          type: 'save',
          payload: newFetch,
        });
        notification.success({
          message: response.code,
          description: response.msg,
        });
      } else {
        notification.error({
          message: response.code,
          description: response.msg,
        });
      }
    },
    *update({ payload }, { call, put }) {
      const response = yield call(saveOrUpdateSalesman, payload);
      if (response.code === 'SUCCESS') {
        const newFetch = yield call(querySalesman, {
          pageNo: 1,
          pageSize: 10
        });
        yield put({
          type: 'save',
          payload: newFetch,
        });
        notification.success({
          message: response.code,
          description: response.msg,
        });
      } else {
        notification.error({
          message: response.code,
          description: response.msg,
        });
      }
    },

    *prohibitSalesman({ payload }, { call, put }) {
      debugger
      const response = yield call(prohibitSalesmanById, payload);
      if (response.code === 'SUCCESS') {
        const newFetch = yield call(querySalesman, {
          pageNo: 1,
          pageSize: 10
        });
        yield put({
          type: 'save',
          payload: newFetch,
        });
        notification.success({
          message: response.code,
          description: response.msg,
        });
      } else {
        notification.error({
          message: response.code,
          description: response.msg,
        });
      }
    },

    *startUpSalesman({ payload }, { call, put }) {
      debugger
      const response = yield call(startUpSalesmanById, payload);
      if (response.code === 'SUCCESS') {
        const newFetch = yield call(querySalesman, {
          pageNo: 1,
          pageSize: 10
        });
        yield put({
          type: 'save',
          payload: newFetch,
        });
        notification.success({
          message: response.code,
          description: response.msg,
        });
      } else {
        notification.error({
          message: response.code,
          description: response.msg,
        });
      }
    },
  },

  reducers: {
    loading(state){
      return {
        ...state,
        loading:true
      };
    },

    save(state, action) {
      return {
        ...state,
        list: action.payload,
        loading:false
      };
    },
}
};
